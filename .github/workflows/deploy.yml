name: Deploy to VPS

on:
    push:
        branches:
            - "**"
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ secrets.IMAGE_REGISTRY }}
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker Image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: Dockerfile
                  push: ${{ github.ref_name == 'main' }}
                  tags: |
                      ${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
                      ${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
                  cache-from: type=registry,ref=${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:cache
                  cache-to: type=inline

    deploy:
        runs-on: ubuntu-latest
        if: github.ref_name == 'main'
        needs: build

        steps:
            - name: Fetch Doppler secrets
              uses: dopplerhq/secrets-fetch-action@v1.3.0
              with:
                  doppler-token: ${{ secrets.DOPPLER_TOKEN }}
                  doppler-project: task-tracker
                  doppler-config: prd
                  inject-env-vars: true

            - name: Deploy
              uses: appleboy/ssh-action@v1.2.2
              with:
                  host: ${{ env.VPS_HOST }}
                  username: ${{ env.VPS_USER }}
                  key: ${{ env.VPS_SSH_KEY }}
                  port: ${{ env.VPS_PORT }}
                  script: |
                      set -e

                      docker pull ${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest

                      docker run --rm \
                        -e DOPPLER_TOKEN="${{ secrets.DOPPLER_TOKEN }}" \
                        ${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest \
                        doppler run -- npx prisma migrate deploy 2>&1 || { echo "Migration failed"; exit 1; }

                      docker stop task-tracker || true
                      docker rm task-tracker || true

                      docker run -d --name task-tracker \
                        -p ${{ env.APP_PORT }}:3000 \
                        --restart unless-stopped \
                        -e DOPPLER_TOKEN="${{ secrets.DOPPLER_TOKEN }}" \
                        ${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest

                      sleep 5

                      if ! docker ps --filter "name=task-tracker" --filter "status=running" | grep task-tracker; then
                        echo "Application container failed to start"
                        docker logs task-tracker
                        exit 1
                      fi
